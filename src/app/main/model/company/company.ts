export class Company {
    _id: string;
    companyID: string;
    companyLocal: string;
    companyName: string;
    description: string;
    address: string;
    addressOther: string;
    city: string;
    state: string;
    zipcode: string;
    addressLocal: string;
    telephone: string;
    fax: string;
    email: string;
    website: string;
    taxcode: string;
    vnAccountNo: string;
    fnAccountNo: string;
    active: boolean;
    location: string;
    accountNote: string;
    notes: string;
    yearinstall: string;
    yearinstalltrue: string;
    ibanCode: string;
    accountName: string;
    swiftCode: string;
    bankName: string;
    bankAddress: string;
    paymentTerm: string;
    exportLockDays: number;
    importLockDays: number;
    daysofRelock: number;
    daysofLockafterOpen: number;
    vcLock: number;
    daysofVCLockafterOpen: number;
    quotationApproveMode: number;
    amountNeedSigned: number;
    currencyAmount: string;
    settleInclude: boolean;
    userInvoice: boolean;
    disableCancelInvoice: boolean;
    paymentCurrencyUpdate: boolean;
    lclcbmRoundable: boolean;
    obligeAccount: boolean;
    obligeAccountCost: boolean;
    restrictEmptPartner: boolean;
    internalPartnerUseOnly: boolean;
    mawbf: boolean;
    billPartnerCodeSyn: boolean;
    viewLocalCurrency: boolean;
    shipmentNeedtoApprove: boolean;
    csApprovedPayment: boolean;
    useSynOBHPartner: true;
    needAssignOPSPayment: boolean;
    settlePaymentDay: number;
    publicNewPartner: boolean;
    lockNewPartner: boolean;
    reportFolder: string;
    approveMode: number;
    tax: number;
    taxAccount: string;
    taxDescription: string;
    fillUSDAmount: boolean;
    contManagement: boolean;
    newIDGenerateAfter: boolean;
    bravoCostAcNo: string;
    bravoRevAcNo: string;
    bravoOBHAcNo: string;
    vnmeseDesc: boolean;
    naccs_ID: string;
    naccs_PWD: string;
    app_AREA_IND: string;
    cust_ID: string;
    ftpURL: string;
    ftpUsername: string;
    ftpPwd: string;
    ftpDir: string;
    vatInvExportMode: number;
    decimalNo: number;
    currencyDecimalNo: number;
    sender_ID: string;
    changeDefaultIllegal: boolean;
    hblQtySyn: boolean;
    manageOfficeID: string;
    synShipmentETD: boolean;
    foreignCurrencyRoundable: boolean;
    lockedInvInpayment: boolean;
    amsSenderID: string;
    amsReceiverID: string;
    amsCUST_ID: string;
    localCurrencyDecimal: number;
    sglUnitList: string;
    transferLogCharges: boolean;
    cdsManualInput: boolean;
    showLotNo: boolean;
    fhPrefix: string;
    nomiPrefix: string;
    vcLockAfterPrinted: boolean;
    nolockDocument: boolean;
    devicePFMode: number;
    extoLocalCurrencyInVATInv: boolean;
    lockChargesAfterInput: boolean;
    totalShmtDefaultDisplay: number;
    leadsToPotential: boolean;
    useSystemJobNoDefine: boolean;
    separateOfficeIDCharges: boolean;
    dnvcBaseonVATInv: boolean;
    noIncludeCountry: boolean;
    dfrpCurrency: string;
    unitCurrencyDecimalNo: string;
    updateNewExchangeRate: boolean;
    ownerRestricted: boolean;
    acStaffDeleteEntire: boolean;

    constructor() {
        this.companyID = null;
        this.companyLocal = null;
        this.companyName = null;
        this.description = null;
        this.address = null;
        this.addressOther = null;
        this.city = null;
        this.state = null;
        this.zipcode = null;
        this.addressLocal = null;
        this.telephone = null;
        this.fax = null;
        this.email = null;
        this.website = null;
        this.taxcode = null;
        this.vnAccountNo = null;
        this.fnAccountNo = null;
        this.active = false;
        this.location = null;
        this.accountNote = null;
        this.notes = null;
        this.yearinstall = null;
        this.yearinstalltrue = null;
        this.ibanCode = null;
        this.accountName = null;
        this.swiftCode = null;
        this.bankName = null;
        this.bankAddress = null;
        this.paymentTerm = null;
        this.exportLockDays = null;
        this.importLockDays = null;
        this.daysofRelock = null;
        this.daysofLockafterOpen = null;
        this.vcLock = null;
        this.daysofVCLockafterOpen = null;
        this.quotationApproveMode = null;
        this.amountNeedSigned = null;
        this.currencyAmount = null;
        this.settleInclude = false;
        this.userInvoice = false;
        this.disableCancelInvoice = false;
        this.paymentCurrencyUpdate = false;
        this.lclcbmRoundable = false;
        this.obligeAccount = false;
        this.obligeAccountCost = false;
        this.restrictEmptPartner = false;
        this.internalPartnerUseOnly = false;
        this.mawbf = false;
        this.billPartnerCodeSyn = false;
        this.viewLocalCurrency = false;
        this.shipmentNeedtoApprove = false;
        this.csApprovedPayment = false;
        this.useSynOBHPartner = true;
        this.needAssignOPSPayment = false;
        this.settlePaymentDay = null;
        this.publicNewPartner = false;
        this.lockNewPartner = false;
        this.reportFolder = null;
        this.approveMode = null;
        this.tax = null;
        this.taxAccount = null;
        this.taxDescription = null;
        this.fillUSDAmount = false;
        this.contManagement = false;
        this.newIDGenerateAfter = false;
        this.bravoCostAcNo = null;
        this.bravoRevAcNo = null;
        this.bravoOBHAcNo = null;
        this.vnmeseDesc = false;
        this.naccs_ID = null;
        this.naccs_PWD = null;
        this.app_AREA_IND = null;
        this.cust_ID = null;
        this.ftpURL = null;
        this.ftpUsername = null;
        this.ftpPwd = null;
        this.ftpDir = null;
        this.vatInvExportMode = null;
        this.decimalNo = null;
        this.currencyDecimalNo = null;
        this.sender_ID = null;
        this.changeDefaultIllegal = false;
        this.hblQtySyn = false;
        this.manageOfficeID = null;
        this.synShipmentETD = false;
        this.foreignCurrencyRoundable = false;
        this.lockedInvInpayment = false;
        this.amsSenderID = null;
        this.amsReceiverID = null;
        this.amsCUST_ID = null;
        this.localCurrencyDecimal = null;
        this.sglUnitList = null;
        this.transferLogCharges = false;
        this.cdsManualInput = false;
        this.showLotNo = false;
        this.fhPrefix = null;
        this.nomiPrefix = null;
        this.vcLockAfterPrinted = false;
        this.nolockDocument = false;
        this.devicePFMode = null;
        this.extoLocalCurrencyInVATInv = false;
        this.lockChargesAfterInput = false;
        this.totalShmtDefaultDisplay = null;
        this.leadsToPotential = false;
        this.useSystemJobNoDefine = false;
        this.separateOfficeIDCharges = false;
        this.dnvcBaseonVATInv = false;
        this.noIncludeCountry = false;
        this.dfrpCurrency = null;
        this.unitCurrencyDecimalNo = null;
        this.updateNewExchangeRate = false;
        this.ownerRestricted = false;
        this.acStaffDeleteEntire = false
    }
}
